{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/KKLee1/Desktop/mws-restaurant-stage-1/js/dbhelper.js\",\"/Users/KKLee1/Desktop/mws-restaurant-stage-1/js/main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"DBHelper\",\"db\",\"request\",\"window\",\"indexedDB\",\"open\",\"onerror\",\"event\",\"alert\",\"target\",\"errorCode\",\"onsucess\",\"result\",\"console\",\"log\",\"onupgradeneeded\",\"createObjectStore\",\"keyPath\",\"transaction\",\"oncomplete\",\"resObjectStore\",\"objectStore\",\"length\",\"getAll\",\"idb\",\"objStore\",\"callback\",\"openDBData\",\"getCachedData\",\"fetch\",\"DATABASE_URL\",\"then\",\"response\",\"json\",\"myJson\",\"forEach\",\"restaurant\",\"add\",\"catch\",\"e\",\"id\",\"fetchRestaurants\",\"error\",\"restaurants\",\"find\",\"cuisine\",\"results\",\"filter\",\"cuisine_type\",\"neighborhood\",\"neighborhoods\",\"map\",\"v\",\"uniqueNeighborhoods\",\"indexOf\",\"cuisines\",\"uniqueCuisines\",\"google\",\"maps\",\"Marker\",\"position\",\"latlng\",\"title\",\"url\",\"urlForRestaurant\",\"animation\",\"Animation\",\"DROP\",\"document\",\"addEventListener\",\"fetchNeighborhoods\",\"fetchCuisines\",\"self\",\"fillNeighborhoodsHTML\",\"arguments\",\"undefined\",\"select\",\"getElementById\",\"option\",\"createElement\",\"innerHTML\",\"append\",\"fillCuisinesHTML\",\"initMap\",\"Map\",\"zoom\",\"center\",\"lat\",\"lng\",\"scrollwheel\",\"updateRestaurants\",\"cSelect\",\"nSelect\",\"cIndex\",\"selectedIndex\",\"nIndex\",\"fetchRestaurantByCuisineAndNeighborhood\",\"resetRestaurants\",\"fillRestaurantsHTML\",\"markers\",\"setMap\",\"ul\",\"createRestaurantHTML\",\"addMarkersToMap\",\"li\",\"image\",\"className\",\"tabIndex\",\"role\",\"src\",\"imageUrlForRestaurant\",\"alt\",\"address\",\"more\",\"href\",\"marker\",\"mapMarkerForRestaurant\",\"addListener\",\"location\",\"push\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 1);\\n\",\"/**\\r\\n * Common database helper functions.\\r\\n */\\r\\n\\r\\nclass DBHelper {\\r\\n\\r\\n\\r\\n    /**\\r\\n     * Database URL.\\r\\n     * Change this to restaurants.json file location on your server.\\r\\n     */\\r\\n    static get DATABASE_URL() {\\r\\n        const port = 1337 // Change this to your server port\\r\\n        return `http://localhost:${port}/restaurants`;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Fetch all restaurants.\\r\\n     */\\r\\n\\r\\n    static openDBData() {\\r\\n\\r\\n        var db;\\r\\n        var request = window.indexedDB.open('restaurant', 1);\\r\\n        request.onerror = function (event) {\\r\\n            alert(\\\"Database error:\\\" + event.target.errorCode);\\r\\n        };\\r\\n        request.onsucess = function (event) {\\r\\n            db.event.target.result;\\r\\n            console.log(\\\"IDB created!!!\\\")\\r\\n        };\\r\\n\\r\\n\\r\\n        request.onupgradeneeded = function (event) {\\r\\n            console.log(\\\"Entered UPgrade!!!!!!!\\\")\\r\\n            db = event.target.result;\\r\\n            var objectstore = db.createObjectStore('restaurant_name', {\\r\\n                keyPath: \\\"id\\\"\\r\\n            });\\r\\n            objectstore.transaction.oncomplete = function (event) {\\r\\n                console.log(\\\"Entered objectstore!!!!!!!\\\")\\r\\n                var resObjectStore = db.transaction([\\\"restaurant_name\\\"], \\\"readwrite\\\").objectStore(\\\"restaurant_name\\\");\\r\\n\\r\\n                if (resObjectStore.length > 0) {\\r\\n                    console.log(\\\"cached data =\\\" + resObjectStore.getAll())\\r\\n                }\\r\\n\\r\\n            };\\r\\n        };\\r\\n\\r\\n        return request;\\r\\n    }\\r\\n\\r\\n    static getCachedData(idb) {\\r\\n        idb.onsucess = function (event) {\\r\\n            var db = event.target.result;\\r\\n            if (!db) return;\\r\\n            console.log(\\\"Using IDB!!!!\\\")\\r\\n            var objStore = db.transaction([\\\"restaurant_name\\\"], \\\"readonly\\\").objectStore(\\\"restaurant_name\\\");\\r\\n            console.log(\\\"IDB result \\\" + objStore.getAll().result)\\r\\n            return objStore.getAll();\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n    static fetchRestaurants(callback) {\\r\\n        var idb = DBHelper.openDBData();\\r\\n        DBHelper.getCachedData(idb);\\r\\n\\r\\n\\r\\n\\r\\n        fetch(DBHelper.DATABASE_URL)\\r\\n            .then(function (response) {\\r\\n                return response.json();\\r\\n            })\\r\\n            .then(function (myJson) {\\r\\n                console.log(myJson);\\r\\n\\r\\n                if (myJson.length > 0) {\\r\\n                    console.log(\\\"Upgrading!!!!!!\\\");\\r\\n                    var db = idb.result;\\r\\n                    var objStore = db.transaction([\\\"restaurant_name\\\"], \\\"readwrite\\\").objectStore(\\\"restaurant_name\\\");\\r\\n                    myJson.forEach(function (restaurant) {\\r\\n                        objStore.add(restaurant);\\r\\n                    });\\r\\n                    console.log(\\\"objstore data\\\" + objStore.getAll())\\r\\n\\r\\n                    return callback(null, myJson);\\r\\n                }\\r\\n            })\\r\\n\\r\\n            .catch(function (e) {\\r\\n\\r\\n\\r\\n                alert(`Request failed. Use cached data instead`)\\r\\n\\r\\n\\r\\n                return callback(e, null);\\r\\n            });\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Fetch a restaurant by its ID.\\r\\n     */\\r\\n    static fetchRestaurantById(id, callback) {\\r\\n        // fetch all restaurants with proper error handling.\\r\\n        DBHelper.fetchRestaurants((error, restaurants) => {\\r\\n            if (error) {\\r\\n                callback(error, null);\\r\\n            } else {\\r\\n                const restaurant = restaurants.find(r => r.id == id);\\r\\n                if (restaurant) { // Got the restaurant\\r\\n                    callback(null, restaurant);\\r\\n                } else { // Restaurant does not exist in the database\\r\\n                    callback('Restaurant does not exist', null);\\r\\n                }\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Fetch restaurants by a cuisine type with proper error handling.\\r\\n     */\\r\\n    static fetchRestaurantByCuisine(cuisine, callback) {\\r\\n        // Fetch all restaurants  with proper error handling\\r\\n        DBHelper.fetchRestaurants((error, restaurants) => {\\r\\n            if (error) {\\r\\n                callback(error, null);\\r\\n            } else {\\r\\n                // Filter restaurants to have only given cuisine type\\r\\n                const results = restaurants.filter(r => r.cuisine_type == cuisine);\\r\\n                callback(null, results);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Fetch restaurants by a neighborhood with proper error handling.\\r\\n     */\\r\\n    static fetchRestaurantByNeighborhood(neighborhood, callback) {\\r\\n        // Fetch all restaurants\\r\\n        DBHelper.fetchRestaurants((error, restaurants) => {\\r\\n            if (error) {\\r\\n                callback(error, null);\\r\\n            } else {\\r\\n                // Filter restaurants to have only given neighborhood\\r\\n                const results = restaurants.filter(r => r.neighborhood == neighborhood);\\r\\n                callback(null, results);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\\r\\n     */\\r\\n    static fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\\r\\n        // Fetch all restaurants\\r\\n        DBHelper.fetchRestaurants((error, restaurants) => {\\r\\n            if (error) {\\r\\n                callback(error, null);\\r\\n            } else {\\r\\n                let results = restaurants\\r\\n                if (cuisine != 'all') { // filter by cuisine\\r\\n                    results = results.filter(r => r.cuisine_type == cuisine);\\r\\n                }\\r\\n                if (neighborhood != 'all') { // filter by neighborhood\\r\\n                    results = results.filter(r => r.neighborhood == neighborhood);\\r\\n                }\\r\\n                callback(null, results);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Fetch all neighborhoods with proper error handling.\\r\\n     */\\r\\n    static fetchNeighborhoods(callback) {\\r\\n        // Fetch all restaurants\\r\\n        DBHelper.fetchRestaurants((error, restaurants) => {\\r\\n            if (error) {\\r\\n                callback(error, null);\\r\\n            } else {\\r\\n                // Get all neighborhoods from all restaurants\\r\\n                const neighborhoods = restaurants.map((v, i) => restaurants[i].neighborhood)\\r\\n                // Remove duplicates from neighborhoods\\r\\n                const uniqueNeighborhoods = neighborhoods.filter((v, i) => neighborhoods.indexOf(v) == i)\\r\\n                callback(null, uniqueNeighborhoods);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Fetch all cuisines with proper error handling.\\r\\n     */\\r\\n    static fetchCuisines(callback) {\\r\\n        // Fetch all restaurants\\r\\n        DBHelper.fetchRestaurants((error, restaurants) => {\\r\\n            if (error) {\\r\\n                callback(error, null);\\r\\n            } else {\\r\\n                // Get all cuisines from all restaurants\\r\\n                const cuisines = restaurants.map((v, i) => restaurants[i].cuisine_type)\\r\\n                // Remove duplicates from cuisines\\r\\n                const uniqueCuisines = cuisines.filter((v, i) => cuisines.indexOf(v) == i)\\r\\n                callback(null, uniqueCuisines);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Restaurant page URL.\\r\\n     */\\r\\n    static urlForRestaurant(restaurant) {\\r\\n        return (`./restaurant.html?id=${restaurant.id}`);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Restaurant image URL.\\r\\n     */\\r\\n    static imageUrlForRestaurant(restaurant) {\\r\\n        return (`./img/${restaurant.id}` + \\\".jpg\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Map marker for a restaurant.\\r\\n     */\\r\\n    static mapMarkerForRestaurant(restaurant, map) {\\r\\n        const marker = new google.maps.Marker({\\r\\n            position: restaurant.latlng,\\r\\n            title: restaurant.name,\\r\\n            url: DBHelper.urlForRestaurant(restaurant),\\r\\n            map: map,\\r\\n            animation: google.maps.Animation.DROP\\r\\n        });\\r\\n        return marker;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\nexport default DBHelper;\\r\\n\",\"import DBHelper from './dbhelper.js';\\r\\n\\r\\n\\r\\nlet restaurants,\\r\\n    neighborhoods,\\r\\n    cuisines\\r\\nvar map\\r\\nvar markers = []\\r\\n\\r\\n/**\\r\\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\\r\\n */\\r\\ndocument.addEventListener('DOMContentLoaded', (event) => {\\r\\n    fetchNeighborhoods();\\r\\n    fetchCuisines();\\r\\n});\\r\\n\\r\\n/**\\r\\n * Fetch all neighborhoods and set their HTML.\\r\\n */\\r\\nfetchNeighborhoods = () => {\\r\\n    DBHelper.fetchNeighborhoods((error, neighborhoods) => {\\r\\n        if (error) { // Got an error\\r\\n            console.error(error);\\r\\n        } else {\\r\\n            self.neighborhoods = neighborhoods;\\r\\n            fillNeighborhoodsHTML();\\r\\n        }\\r\\n    });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set neighborhoods HTML.\\r\\n */\\r\\nfillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\\r\\n    const select = document.getElementById('neighborhoods-select');\\r\\n    neighborhoods.forEach(neighborhood => {\\r\\n        const option = document.createElement('option');\\r\\n        option.innerHTML = neighborhood;\\r\\n        option.value = neighborhood;\\r\\n        select.append(option);\\r\\n    });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Fetch all cuisines and set their HTML.\\r\\n */\\r\\nfetchCuisines = () => {\\r\\n    DBHelper.fetchCuisines((error, cuisines) => {\\r\\n        if (error) { // Got an error!\\r\\n            console.error(error);\\r\\n        } else {\\r\\n            self.cuisines = cuisines;\\r\\n            fillCuisinesHTML();\\r\\n        }\\r\\n    });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set cuisines HTML.\\r\\n */\\r\\nfillCuisinesHTML = (cuisines = self.cuisines) => {\\r\\n    const select = document.getElementById('cuisines-select');\\r\\n\\r\\n    cuisines.forEach(cuisine => {\\r\\n        const option = document.createElement('option');\\r\\n        option.innerHTML = cuisine;\\r\\n        option.value = cuisine;\\r\\n        select.append(option);\\r\\n    });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Initialize Google map, called from HTML.\\r\\n */\\r\\nwindow.initMap = () => {\\r\\n    let loc = {\\r\\n        lat: 40.722216,\\r\\n        lng: -73.987501\\r\\n    };\\r\\n    self.map = new google.maps.Map(document.getElementById('map'), {\\r\\n        zoom: 12,\\r\\n        center: loc,\\r\\n        scrollwheel: false\\r\\n    });\\r\\n    updateRestaurants();\\r\\n}\\r\\n\\r\\n/**\\r\\n * Update page and map for current restaurants.\\r\\n */\\r\\nupdateRestaurants = () => {\\r\\n    const cSelect = document.getElementById('cuisines-select');\\r\\n    const nSelect = document.getElementById('neighborhoods-select');\\r\\n\\r\\n    const cIndex = cSelect.selectedIndex;\\r\\n    const nIndex = nSelect.selectedIndex;\\r\\n\\r\\n    const cuisine = cSelect[cIndex].value;\\r\\n    const neighborhood = nSelect[nIndex].value;\\r\\n\\r\\n    DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, (error, restaurants) => {\\r\\n        if (error) { // Got an error!\\r\\n            console.error(error);\\r\\n        } else {\\r\\n            resetRestaurants(restaurants);\\r\\n            fillRestaurantsHTML();\\r\\n        }\\r\\n    })\\r\\n}\\r\\n\\r\\n/**\\r\\n * Clear current restaurants, their HTML and remove their map markers.\\r\\n */\\r\\nresetRestaurants = (restaurants) => {\\r\\n    // Remove all restaurants\\r\\n    self.restaurants = [];\\r\\n    const ul = document.getElementById('restaurants-list');\\r\\n    ul.innerHTML = '';\\r\\n\\r\\n    // Remove all map markers\\r\\n    self.markers.forEach(m => m.setMap(null));\\r\\n    self.markers = [];\\r\\n    self.restaurants = restaurants;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Create all restaurants HTML and add them to the webpage.\\r\\n */\\r\\nfillRestaurantsHTML = (restaurants = self.restaurants) => {\\r\\n    const ul = document.getElementById('restaurants-list');\\r\\n    restaurants.forEach(restaurant => {\\r\\n        ul.append(createRestaurantHTML(restaurant));\\r\\n    });\\r\\n    addMarkersToMap();\\r\\n}\\r\\n\\r\\n/**\\r\\n * Create restaurant HTML.\\r\\n */\\r\\ncreateRestaurantHTML = (restaurant) => {\\r\\n    const li = document.createElement('li');\\r\\n\\r\\n    const image = document.createElement('img');\\r\\n    image.className = 'restaurant-img';\\r\\n    image.tabIndex = '0';\\r\\n    image.role = 'img';\\r\\n    image.src = DBHelper.imageUrlForRestaurant(restaurant);\\r\\n    if (DBHelper.imageUrlForRestaurant(restaurant) == \\\"./img/1.jpg\\\") {\\r\\n        image.alt = \\\"Mission Chinese Food Restaurant, classical indoor decoration\\\"\\r\\n    } else if (DBHelper.imageUrlForRestaurant(restaurant) == \\\"./img/2.jpg\\\") {\\r\\n        image.alt = \\\"Emily Restaurant, Italian pizza\\\"\\r\\n    } else if (DBHelper.imageUrlForRestaurant(restaurant) == \\\"./img/3.jpg\\\") {\\r\\n        image.alt = \\\"Kang Ho Dong Baekjeong Restaurant, street food style decoration\\\"\\r\\n\\r\\n    } else if (DBHelper.imageUrlForRestaurant(restaurant) == \\\"./img/4.jpg\\\") {\\r\\n        image.alt = \\\"Katz's Delicatessen Restaurant, American fast food\\\"\\r\\n\\r\\n    } else if (DBHelper.imageUrlForRestaurant(restaurant) == \\\"./img/5.jpg\\\") {\\r\\n        image.alt = \\\"Roberta's Pizza Restaurant, classical Pizza decoration\\\"\\r\\n\\r\\n    } else if (DBHelper.imageUrlForRestaurant(restaurant) == \\\"./img/6.jpg\\\") {\\r\\n        image.alt = \\\"Hometown BBQ Restaurant, casual decoration\\\"\\r\\n\\r\\n    } else if (DBHelper.imageUrlForRestaurant(restaurant) == \\\"./img/7.jpg\\\") {\\r\\n        image.alt = \\\"Superiority Burger Restaurant, fast food style decoration\\\"\\r\\n\\r\\n    } else if (DBHelper.imageUrlForRestaurant(restaurant) == \\\"./img/8.jpg\\\") {\\r\\n        image.alt = \\\"The Dutch Restaurant, classical indoor decoration\\\"\\r\\n\\r\\n    } else if (DBHelper.imageUrlForRestaurant(restaurant) == \\\"./img/9.jpg\\\") {\\r\\n        image.alt = \\\"Mu Ramen Restaurant, well-designed decoration\\\"\\r\\n\\r\\n    } else if (DBHelper.imageUrlForRestaurant(restaurant) == \\\"./img/10.jpg\\\") {\\r\\n        image.alt = \\\"Casa Enrique Restaurant, modern indoor decoration\\\"\\r\\n\\r\\n    }\\r\\n    li.append(image);\\r\\n\\r\\n    const name = document.createElement('h2');\\r\\n    name.innerHTML = restaurant.name;\\r\\n    name.tabIndex = '0';\\r\\n    li.append(name);\\r\\n\\r\\n    const neighborhood = document.createElement('p');\\r\\n    neighborhood.innerHTML = restaurant.neighborhood;\\r\\n    li.append(neighborhood);\\r\\n\\r\\n    const address = document.createElement('p');\\r\\n    address.innerHTML = restaurant.address;\\r\\n    li.append(address);\\r\\n\\r\\n    const more = document.createElement('a');\\r\\n    more.innerHTML = 'View Details';\\r\\n    more.href = DBHelper.urlForRestaurant(restaurant);\\r\\n    li.append(more)\\r\\n\\r\\n    return li\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * Add markers for current restaurants to the map.\\r\\n */\\r\\naddMarkersToMap = (restaurants = self.restaurants) => {\\r\\n    restaurants.forEach(restaurant => {\\r\\n        // Add marker to the map\\r\\n        const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);\\r\\n        google.maps.event.addListener(marker, 'click', () => {\\r\\n            window.location.href = marker.url\\r\\n        });\\r\\n        self.markers.push(marker);\\r\\n    });\\r\\n}\\r\\n\\r\\n\\r\\nmodule.exports = {\\r\\n    fetchNeighborhoods: fetchNeighborhoods,\\r\\n    fillNeighborhoodsHTML: fillNeighborhoodsHTML,\\r\\n    fetchCuisines: fetchCuisines,\\r\\n    fillCuisinesHTML: fillCuisinesHTML,\\r\\n    updateRestaurants: updateRestaurants,\\r\\n    resetRestaurants: resetRestaurants,\\r\\n    fillRestaurantsHTML: fillRestaurantsHTML,\\r\\n    createRestaurantHTML: createRestaurantHTML,\\r\\n    addMarkersToMap: addMarkersToMap,\\r\\n\\r\\n};\\r\\n\"]}","code":"!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=1)}([function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var r=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)}return a(e,null,[{key:\"openDBData\",value:function(){var e,t=window.indexedDB.open(\"restaurant\",1);return t.onerror=function(e){alert(\"Database error:\"+e.target.errorCode)},t.onsucess=function(t){e.event.target.result,console.log(\"IDB created!!!\")},t.onupgradeneeded=function(t){console.log(\"Entered UPgrade!!!!!!!\"),(e=t.target.result).createObjectStore(\"restaurant_name\",{keyPath:\"id\"}).transaction.oncomplete=function(t){console.log(\"Entered objectstore!!!!!!!\");var n=e.transaction([\"restaurant_name\"],\"readwrite\").objectStore(\"restaurant_name\");n.length>0&&console.log(\"cached data =\"+n.getAll())}},t}},{key:\"getCachedData\",value:function(e){e.onsucess=function(e){var t=e.target.result;if(t){console.log(\"Using IDB!!!!\");var n=t.transaction([\"restaurant_name\"],\"readonly\").objectStore(\"restaurant_name\");return console.log(\"IDB result \"+n.getAll().result),n.getAll()}}}},{key:\"fetchRestaurants\",value:function(t){var n=e.openDBData();e.getCachedData(n),fetch(e.DATABASE_URL).then(function(e){return e.json()}).then(function(e){if(console.log(e),e.length>0){console.log(\"Upgrading!!!!!!\");var a=n.result.transaction([\"restaurant_name\"],\"readwrite\").objectStore(\"restaurant_name\");return e.forEach(function(e){a.add(e)}),console.log(\"objstore data\"+a.getAll()),t(null,e)}}).catch(function(e){return alert(\"Request failed. Use cached data instead\"),t(e,null)})}},{key:\"fetchRestaurantById\",value:function(t,n){e.fetchRestaurants(function(e,a){if(e)n(e,null);else{var r=a.find(function(e){return e.id==t});r?n(null,r):n(\"Restaurant does not exist\",null)}})}},{key:\"fetchRestaurantByCuisine\",value:function(t,n){e.fetchRestaurants(function(e,a){if(e)n(e,null);else{var r=a.filter(function(e){return e.cuisine_type==t});n(null,r)}})}},{key:\"fetchRestaurantByNeighborhood\",value:function(t,n){e.fetchRestaurants(function(e,a){if(e)n(e,null);else{var r=a.filter(function(e){return e.neighborhood==t});n(null,r)}})}},{key:\"fetchRestaurantByCuisineAndNeighborhood\",value:function(t,n,a){e.fetchRestaurants(function(e,r){if(e)a(e,null);else{var o=r;\"all\"!=t&&(o=o.filter(function(e){return e.cuisine_type==t})),\"all\"!=n&&(o=o.filter(function(e){return e.neighborhood==n})),a(null,o)}})}},{key:\"fetchNeighborhoods\",value:function(t){e.fetchRestaurants(function(e,n){if(e)t(e,null);else{var a=n.map(function(e,t){return n[t].neighborhood}),r=a.filter(function(e,t){return a.indexOf(e)==t});t(null,r)}})}},{key:\"fetchCuisines\",value:function(t){e.fetchRestaurants(function(e,n){if(e)t(e,null);else{var a=n.map(function(e,t){return n[t].cuisine_type}),r=a.filter(function(e,t){return a.indexOf(e)==t});t(null,r)}})}},{key:\"urlForRestaurant\",value:function(e){return\"./restaurant.html?id=\"+e.id}},{key:\"imageUrlForRestaurant\",value:function(e){return\"./img/\"+e.id+\".jpg\"}},{key:\"mapMarkerForRestaurant\",value:function(t,n){return new google.maps.Marker({position:t.latlng,title:t.name,url:e.urlForRestaurant(t),map:n,animation:google.maps.Animation.DROP})}},{key:\"DATABASE_URL\",get:function(){return\"http://localhost:1337/restaurants\"}}]),e}();t.default=r},function(e,t,n){\"use strict\";var a=function(e){return e&&e.__esModule?e:{default:e}}(n(0));document.addEventListener(\"DOMContentLoaded\",function(e){fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=function(){a.default.fetchNeighborhoods(function(e,t){e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})},fillNeighborhoodsHTML=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.neighborhoods,t=document.getElementById(\"neighborhoods-select\");e.forEach(function(e){var n=document.createElement(\"option\");n.innerHTML=e,n.value=e,t.append(n)})},fetchCuisines=function(){a.default.fetchCuisines(function(e,t){e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})},fillCuisinesHTML=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.cuisines,t=document.getElementById(\"cuisines-select\");e.forEach(function(e){var n=document.createElement(\"option\");n.innerHTML=e,n.value=e,t.append(n)})},window.initMap=function(){self.map=new google.maps.Map(document.getElementById(\"map\"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()},updateRestaurants=function(){var e=document.getElementById(\"cuisines-select\"),t=document.getElementById(\"neighborhoods-select\"),n=e.selectedIndex,r=t.selectedIndex,o=e[n].value,u=t[r].value;a.default.fetchRestaurantByCuisineAndNeighborhood(o,u,function(e,t){e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})},resetRestaurants=function(e){self.restaurants=[],document.getElementById(\"restaurants-list\").innerHTML=\"\",self.markers.forEach(function(e){return e.setMap(null)}),self.markers=[],self.restaurants=e},fillRestaurantsHTML=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.restaurants,t=document.getElementById(\"restaurants-list\");e.forEach(function(e){t.append(createRestaurantHTML(e))}),addMarkersToMap()},createRestaurantHTML=function(e){var t=document.createElement(\"li\"),n=document.createElement(\"img\");n.className=\"restaurant-img\",n.tabIndex=\"0\",n.role=\"img\",n.src=a.default.imageUrlForRestaurant(e),\"./img/1.jpg\"==a.default.imageUrlForRestaurant(e)?n.alt=\"Mission Chinese Food Restaurant, classical indoor decoration\":\"./img/2.jpg\"==a.default.imageUrlForRestaurant(e)?n.alt=\"Emily Restaurant, Italian pizza\":\"./img/3.jpg\"==a.default.imageUrlForRestaurant(e)?n.alt=\"Kang Ho Dong Baekjeong Restaurant, street food style decoration\":\"./img/4.jpg\"==a.default.imageUrlForRestaurant(e)?n.alt=\"Katz's Delicatessen Restaurant, American fast food\":\"./img/5.jpg\"==a.default.imageUrlForRestaurant(e)?n.alt=\"Roberta's Pizza Restaurant, classical Pizza decoration\":\"./img/6.jpg\"==a.default.imageUrlForRestaurant(e)?n.alt=\"Hometown BBQ Restaurant, casual decoration\":\"./img/7.jpg\"==a.default.imageUrlForRestaurant(e)?n.alt=\"Superiority Burger Restaurant, fast food style decoration\":\"./img/8.jpg\"==a.default.imageUrlForRestaurant(e)?n.alt=\"The Dutch Restaurant, classical indoor decoration\":\"./img/9.jpg\"==a.default.imageUrlForRestaurant(e)?n.alt=\"Mu Ramen Restaurant, well-designed decoration\":\"./img/10.jpg\"==a.default.imageUrlForRestaurant(e)&&(n.alt=\"Casa Enrique Restaurant, modern indoor decoration\"),t.append(n);var r=document.createElement(\"h2\");r.innerHTML=e.name,r.tabIndex=\"0\",t.append(r);var o=document.createElement(\"p\");o.innerHTML=e.neighborhood,t.append(o);var u=document.createElement(\"p\");u.innerHTML=e.address,t.append(u);var i=document.createElement(\"a\");return i.innerHTML=\"View Details\",i.href=a.default.urlForRestaurant(e),t.append(i),t},addMarkersToMap=function(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.restaurants).forEach(function(e){var t=a.default.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,\"click\",function(){window.location.href=t.url}),self.markers.push(t)})},e.exports={fetchNeighborhoods:fetchNeighborhoods,fillNeighborhoodsHTML:fillNeighborhoodsHTML,fetchCuisines:fetchCuisines,fillCuisinesHTML:fillCuisinesHTML,updateRestaurants:updateRestaurants,resetRestaurants:resetRestaurants,fillRestaurantsHTML:fillRestaurantsHTML,createRestaurantHTML:createRestaurantHTML,addMarkersToMap:addMarkersToMap}}]);","extractedComments":[]}